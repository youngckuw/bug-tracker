pipeline {
    agent any

    stages {
        stage('Execute Unit Tests') {
            parallel {

                // -------- Backend ---------------------------------
                stage('Unit Tests - Backend') {
                    agent {
                        docker {
                            image 'snakee/golang-junit:1.21'
                            args '-u root:root'
                            reuseNode true
                        }
                    }

                    steps {
                        dir('bugtracker-backend') {
                            sh '''
                                go test -v ./... 2>&1 | go-junit-report > test-results.xml
                                go test -coverprofile=coverage.out -covermode=atomic ./...
                                go tool cover -html=coverage.out -o coverage.html

                                mkdir -p reports
                                mv coverage.html reports/
                            '''
                        }
                    }

                    post {
                        always {
                            junit 'bugtracker-backend/test-results.xml'
                            publishHTML target: [
                                reportDir  : 'bugtracker-backend/reports',
                                reportFiles: 'coverage.html',
                                reportName : 'Backend Coverage Report'
                            ]
                        }
                    }
                },

                // -------- Frontend --------------------------------
                stage('Unit Tests - Frontend') {
                    agent {
                        docker {
                            image 'node:20-alpine'
                            reuseNode true
                        }
                    }

                    steps {
                        dir('bugtracker-frontend') {
                            sh '''
                                npm ci
                                npm test -- --coverage
                                mkdir -p reports/coverage
                                mv coverage/* reports/coverage/
                            '''
                        }
                    }

                    post {
                        always {
                            // Assuming the front‑end test runner emits a JUnit XML file called
                            // `test-results.xml`. If it doesn’t, remove this line or point to
                            // the correct file.
                            junit 'bugtracker-frontend/test-results.xml'

                            publishHTML target: [
                                reportDir  : 'bugtracker-frontend/reports/coverage',
                                reportFiles: 'index.html',
                                reportName : 'Frontend Coverage Report'
                            ]
                        }
                    }
                }

            }   // end parallel
        }       // end Execute Unit Tests stage
    }           // end stages
}               // end pipeline
